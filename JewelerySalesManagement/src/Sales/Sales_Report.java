/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Sales_details.java
 *
 * Created on 30 Oct, 2014, 12:43:02 PM
 */

package Sales;

//For shadow
import Sales.GoldReports.CustID;
import Sales.GoldReports.FromALL;
import Sales.GoldReports.FromDate;
import Sales.GoldReports.GTrnByDate;
import Sales.GoldReports.GroupRep;
import Sales.GoldReports.Place;
import Sales.GoldReports.Trans;
import Sales.SilverReport.STrnByDate;
import Sales.SilverReport.SilTrans;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.io.File;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;

/**
 *
 * @author My Pc
 */
public class Sales_Report extends javax.swing.JPanel {

    private static class Public {

        public Public() {
        }
    }
      //attrib for shadow starts************************************************
    protected int strokeSize = 1;
    protected Color shadowColor = Color.black;
    protected boolean shady = true;
    protected boolean highQuality = true;
    protected Dimension arcs = new Dimension(20, 20);
    protected int shadowGap = 5;
    protected int shadowOffset = 4;
    protected int shadowAlpha = 150;
//attrib for shadow stops************************************************
    String t2,t4,t6,t7;
    int tt7;
    Sales.Services.Goldservices gs=new Sales.Services.Goldservices();
    Sales.Services.Silver_Service ss=new Sales.Services.Silver_Service();
    /** Creates new form Sales_details */
    public Sales_Report() {
        setOpaque(false);
        initComponents();
        GcomboCustIDs();
        GcomboPlace();
        System.out.println("Done.........");
    }
    public void GcomboCustIDs()
    {
        try
        {
        int i=0;
        List lst=null;
        lst=(List)gs.getcustid();
        String cods[]=new String[lst.size()];
        Iterator itm1=lst.iterator();
        while(itm1.hasNext())
        {
             cods[i]=(String)itm1.next();
             i++;
        }
        gcustcmb.setModel(new javax.swing.DefaultComboBoxModel(cods));
        gcustcmb.setMaximumRowCount(6);
        gcustcmb.setFocusable(true);
        gcustcmb1.setModel(new javax.swing.DefaultComboBoxModel(cods));
        gcustcmb1.setMaximumRowCount(6);
        gcustcmb1.setFocusable(true);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Initialization Failed Please Try Again");
        }
    }
    public void GcomboPlace()
    {
        try
        {
        int i=0;
        List lst=null;
        lst=(List)gs.getPlace();
        String cods[]=new String[lst.size()];
        Iterator itm1=lst.iterator();
        while(itm1.hasNext())
        {
             cods[i]=(String)itm1.next();
             i++;
        }
        gpls.setModel(new javax.swing.DefaultComboBoxModel(cods));
        gpls.setMaximumRowCount(6);
        gpls.setFocusable(true);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this,"Initialization Failed Please Try Again");
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        trsgp = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        gc8 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        gallchk = new javax.swing.JCheckBox();
        gcidchk = new javax.swing.JCheckBox();
        gcustcmb = new javax.swing.JComboBox();
        gdatechk = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        gfd = new com.toedter.calendar.JDateChooser();
        gtd = new com.toedter.calendar.JDateChooser();
        closebtn = new javax.swing.JButton();
        gdesk = new javax.swing.JDesktopPane();
        gplacechk = new javax.swing.JCheckBox();
        gcidplcchk = new javax.swing.JCheckBox();
        gpls = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        trd1 = new com.toedter.calendar.JDateChooser();
        trd2 = new com.toedter.calendar.JDateChooser();
        gc9 = new javax.swing.JButton();
        closebtn1 = new javax.swing.JButton();
        transpan = new javax.swing.JDesktopPane();
        gcustcmb1 = new javax.swing.JComboBox();
        tchk1 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        tchk2 = new javax.swing.JCheckBox();

        setOpaque(false);

        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 14));

        gc8.setFont(new java.awt.Font("Times New Roman", 1, 14));
        gc8.setText("View");
        gc8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gc8ActionPerformed(evt);
            }
        });
        gc8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gc8KeyPressed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        gallchk.setFont(new java.awt.Font("Times New Roman", 1, 14));
        gallchk.setText("All");
        gallchk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gallchkKeyPressed(evt);
            }
        });

        gcidchk.setFont(new java.awt.Font("Times New Roman", 1, 14));
        gcidchk.setText("Customer ID:");
        gcidchk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gcidchkKeyPressed(evt);
            }
        });

        gcustcmb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gcustcmbKeyPressed(evt);
            }
        });

        gdatechk.setFont(new java.awt.Font("Times New Roman", 1, 14));
        gdatechk.setText("By Date:");
        gdatechk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gdatechkKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel2.setText("From Date:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel3.setText("To Date:");

        gfd.setDateFormatString("dd/MM/yyyy");

        gtd.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gfd, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(gtd, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(gtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(gfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gallchk, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gcustcmb, 0, 111, Short.MAX_VALUE)
                    .addComponent(gcidchk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gdatechk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(gdatechk)
                        .addGap(38, 38, 38))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gallchk)
                            .addComponent(gcidchk))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gcustcmb, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        closebtn.setFont(new java.awt.Font("Times New Roman", 1, 14));
        closebtn.setText("Close");
        closebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtnActionPerformed(evt);
            }
        });

        gplacechk.setFont(new java.awt.Font("Times New Roman", 1, 14));
        gplacechk.setText("By Place:");
        gplacechk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gplacechkKeyPressed(evt);
            }
        });

        gcidplcchk.setFont(new java.awt.Font("Times New Roman", 1, 14));
        gcidplcchk.setText("CustID & Place Group");
        gcidplcchk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gcidplcchkKeyPressed(evt);
            }
        });

        gpls.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gplsKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gdesk, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(gplacechk)
                                .addGap(33, 33, 33)
                                .addComponent(gcidplcchk)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(gc8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(closebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(gpls, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gplacechk)
                            .addComponent(gcidplcchk))
                        .addGap(13, 13, 13)
                        .addComponent(gpls, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(gc8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(closebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gdesk, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );

        jTabbedPane1.addTab("Customer Data Reports", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setText("From Date:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel5.setText("To Date:");

        trd1.setDateFormatString("dd/MM/yyyy");

        trd2.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(trd1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(trd2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(trd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(trd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        gc9.setFont(new java.awt.Font("Times New Roman", 1, 14));
        gc9.setText("View");
        gc9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gc9ActionPerformed(evt);
            }
        });
        gc9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gc9KeyPressed(evt);
            }
        });

        closebtn1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        closebtn1.setText("Close");
        closebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtn1ActionPerformed(evt);
            }
        });

        gcustcmb1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gcustcmb1KeyPressed(evt);
            }
        });

        tchk1.setFont(new java.awt.Font("Times New Roman", 1, 14));
        tchk1.setText("Customer ID:");
        tchk1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tchk1KeyPressed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        trsgp.add(r1);
        r1.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        r1.setText("Gold Transaction");
        r1.setOpaque(false);

        trsgp.add(r2);
        r2.setFont(new java.awt.Font("Lucida Bright", 1, 14));
        r2.setText("Silver Transaction");
        r2.setOpaque(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r1)
                    .addComponent(r2))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(r1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(r2)
                .addContainerGap())
        );

        tchk2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        tchk2.setText("Date:");
        tchk2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tchk2ActionPerformed(evt);
            }
        });
        tchk2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tchk2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gcustcmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tchk1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(tchk2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(gc9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(closebtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(transpan, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tchk1)
                                .addComponent(tchk2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(gcustcmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(closebtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gc9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(transpan, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Transaction", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1012, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void closebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtnActionPerformed
        // TODO add your handling code here:
         Admin.Forms.MainMenu.PanelInfo.removeAll();
        Admin.Forms.MainMenu.PanelInfo.repaint();
    }//GEN-LAST:event_closebtnActionPerformed

    private void gc8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gc8KeyPressed
        // TODO add your handling code here:
        int keycode=evt.getKeyCode();
        if(keycode==10)
        {
            closebtn.requestFocus(true);
        }
    }//GEN-LAST:event_gc8KeyPressed

    private void gc8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gc8ActionPerformed
        // TODO add your handling code here:
        if(gallchk.isSelected()==true){genGAll();}
        if(gcidchk.isSelected()==true){genGCustid();}
        if(gdatechk.isSelected()==true){genGDate();}
        if((gplacechk.isSelected()==true)&&(gpls.getSelectedIndex()!=0)){genGPlace();}
        if(gcidplcchk.isSelected()==true){genByGroup();}
    }//GEN-LAST:event_gc8ActionPerformed

    private void gallchkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gallchkKeyPressed
        // TODO add your handling code here:
            
    }//GEN-LAST:event_gallchkKeyPressed

    private void gcidchkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gcidchkKeyPressed
        // TODO add your handling code here:
            int keycode=evt.getKeyCode();
        if(keycode==10)
        {
            gcustcmb.requestFocus(true);
        }
    }//GEN-LAST:event_gcidchkKeyPressed

    private void gcustcmbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gcustcmbKeyPressed
        // TODO add your handling code here:
            int keycode=evt.getKeyCode();
        if(keycode==10)
        {
              gdatechk.requestFocus(true);
        }
    }//GEN-LAST:event_gcustcmbKeyPressed

    private void gdatechkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gdatechkKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_gdatechkKeyPressed
  //*******************************GEN ALL Gold SALES REPORT COD STARTS HERE***************************
    public void genGAll()
    {

    try{
            File fl=new File("src\\Sales\\GoldReports\\All.jrxml");
            String rep=fl.getAbsolutePath();
            FromALL repo=new FromALL(rep);
            System.out.println("9");
            repo.setBounds(0, 0, gdesk.getWidth(), gdesk.getHeight());
            repo.setVisible(true);
            this.gdesk.add(repo);
        }catch(Exception e){}
    }
    public void genByGroup()
    {

    try{
            File fl=new File("src\\Sales\\GoldReports\\GGroup.jrxml");
            String rep=fl.getAbsolutePath();
            GroupRep repo=new GroupRep(rep);
            System.out.println("9");
            repo.setBounds(0, 0, gdesk.getWidth(), gdesk.getHeight());
            repo.setVisible(true);
            this.gdesk.add(repo);
        }catch(Exception e){}
    }
    public void genGCustid()
    {

                    HashMap param=new HashMap();
                    String nam=gcustcmb.getSelectedItem().toString();
                param.put("cid",nam);
try{
File fl=new File("src\\Sales\\GoldReports\\CustID.jrxml");
            String rep=fl.getAbsolutePath();
            CustID repo=new CustID(rep, param);
            System.out.println("9");
            repo.setBounds(0, 0, gdesk.getWidth(), gdesk.getHeight());
            repo.setVisible(true);
            this.gdesk.add(repo);
        }catch(Exception e){}

}
    public void genGDate()
    {

                    HashMap param=new HashMap();
                   // SimpleDateFormat Format1 = new SimpleDateFormat("dd/MMM/yyyy");
                   // String d=String.valueOf(Format1.format(gfd.getDate()));
                   // Date fd=Date.valueOf(d);
                   // SimpleDateFormat Format2 = new SimpleDateFormat("dd/MMM/yyyy");
                   // String dd1=String.valueOf(Format1.format(gtd.getDate()));
                   // Date td=Date.valueOf(dd1);
                   // String td=String.valueOf(Format1.format(gtd.getDate()));
                   // String fdt=String.valueOf(fd);
                 java.sql.Date fd=(Date) new java.sql.Date(gfd.getDate().getTime());
                 java.sql.Date td=(Date) new java.sql.Date(gtd.getDate().getTime());
                   // String tdt=String.valueOf(td);
                   // Date fdd=Date.valueOf(td);
                    param.put("fdat",fd);
                    param.put("tdat",td);
try{
            File fl=new File("src\\Sales\\GoldReports\\FromDate.jrxml");
            String rep=fl.getAbsolutePath();
            FromDate repo=new FromDate(rep,param);
            System.out.println("9");
            repo.setBounds(0, 0, gdesk.getWidth(), gdesk.getHeight());
            repo.setVisible(true);
            this.gdesk.add(repo);
        }catch(Exception e){}

}
    public void genGPlace()
    {
//place
                HashMap param=new HashMap();
                String nam=gpls.getSelectedItem().toString();
                param.put("place",nam);
try{
            File fl=new File("src\\Sales\\GoldReports\\GByPlace.jrxml");
            String rep=fl.getAbsolutePath();
            Place repo=new Place(rep, param);
            System.out.println("9");
            repo.setBounds(0, 0, gdesk.getWidth(), gdesk.getHeight());
            repo.setVisible(true);
            this.gdesk.add(repo);
        }catch(Exception e){}

}
//---------------------------gold Sale-------------------------------------------------




   
//---------------------------gold Sale-------------------------------------------------
    private void gplacechkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gplacechkKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_gplacechkKeyPressed

    private void gcidplcchkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gcidplcchkKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_gcidplcchkKeyPressed

    private void gplsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gplsKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_gplsKeyPressed

    private void gc9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gc9ActionPerformed
        // TODO add your handling code here:
        boolean v=val();
        if(v)
        {
            if((r1.isSelected()==true)&&(tchk1.isSelected()==true)){genGTCustid();}
            if((r1.isSelected()==true)&&(tchk2.isSelected()==true)){GTR_by_Date();}
            if((r2.isSelected()==true)&&(tchk1.isSelected()==true)){genSTCustid();}
            if((r2.isSelected()==true)&&(tchk2.isSelected()==true)){STR_by_Date();}
            
        }
        
    }//GEN-LAST:event_gc9ActionPerformed
    public void genGTCustid()
    {

        HashMap param=new HashMap();
        String nam=gcustcmb1.getSelectedItem().toString();
        param.put("cstid",nam);
        param.put("trid",nam);
        try{
            File fl=new File("src\\Sales\\GoldReports\\GoldTrans.jrxml");
            String rep=fl.getAbsolutePath();
            Trans repo=new Trans(rep, param);
            System.out.println("9");
            repo.setBounds(0, 0, transpan.getWidth(), transpan.getHeight());
            repo.setVisible(true);
            this.transpan.add(repo);
        }catch(Exception e){}

}
    public void genSTCustid()
    {

        HashMap param=new HashMap();
        String nam=gcustcmb1.getSelectedItem().toString();
        param.put("cstid",nam);
        try{
            File fl=new File("src\\Sales\\SilverReport\\SilverTr.jrxml");
            String rep=fl.getAbsolutePath();
            SilTrans repo=new SilTrans(rep, param);
            System.out.println("9");
            repo.setBounds(0, 0, transpan.getWidth(), transpan.getHeight());
            repo.setVisible(true);
            this.transpan.add(repo);
        }catch(Exception e){}

}
    public void GTR_by_Date()
    {
        HashMap param=new HashMap();
        java.sql.Date fd=(Date) new java.sql.Date(trd1.getDate().getTime());
        java.sql.Date td=(Date) new java.sql.Date(trd2.getDate().getTime());
        param.put("fdat",fd);
        param.put("tdat",td);
        try
        {
            File fl=new File("src\\Sales\\GoldReports\\GoldTransDate.jrxml");
            String rep=fl.getAbsolutePath();
            GTrnByDate repo=new GTrnByDate(rep,param);
            System.out.println("9");
            repo.setBounds(0, 0, transpan.getWidth(), transpan.getHeight());
            repo.setVisible(true);
            this.transpan.add(repo);
        }catch(Exception e){}

}
    public void STR_by_Date()
    {
        HashMap param=new HashMap();
        java.sql.Date fd=(Date) new java.sql.Date(trd1.getDate().getTime());
        java.sql.Date td=(Date) new java.sql.Date(trd2.getDate().getTime());
        param.put("fdat",fd);
        param.put("tdat",td);
        try
        {
            File fl=new File("src\\Sales\\SilverReport\\Silver_by_date.jrxml");
            String rep=fl.getAbsolutePath();
            STrnByDate repo=new STrnByDate(rep,param);
            System.out.println("9");
            repo.setBounds(0, 0, transpan.getWidth(), transpan.getHeight());
            repo.setVisible(true);
            this.transpan.add(repo);
        }catch(Exception e){}

}
    private boolean val()
    {
        if((r1.isSelected()==true)&&(tchk1.isSelected()==true)&&(gcustcmb1.getSelectedIndex()==0)){JOptionPane.showMessageDialog(this, "Select Customer ID");return false;}
        if((r2.isSelected()==true)&&(tchk1.isSelected()==true)&&(gcustcmb1.getSelectedIndex()==0)){JOptionPane.showMessageDialog(this, "Select Customer ID");return false;}
        if((r1.isSelected()==true)&&(tchk2.isSelected()==true)&&(trd1.getDate()==null)&&(trd2.getDate()==null)){JOptionPane.showMessageDialog(this, "Select From And To date to search");return false;}
        if((r2.isSelected()==true)&&(tchk2.isSelected()==true)&&(trd1.getDate()==null)&&(trd2.getDate()==null)){JOptionPane.showMessageDialog(this, "Select From And To date to search");return false;}
        return true;
    }
    private void gc9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gc9KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_gc9KeyPressed

    private void closebtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtn1ActionPerformed
        // TODO add your handling code here:
         Admin.Forms.MainMenu.PanelInfo.removeAll();
        Admin.Forms.MainMenu.PanelInfo.repaint();
    }//GEN-LAST:event_closebtn1ActionPerformed

    private void gcustcmb1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gcustcmb1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_gcustcmb1KeyPressed

    private void tchk1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tchk1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tchk1KeyPressed

    private void tchk2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tchk2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tchk2KeyPressed

    private void tchk2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tchk2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tchk2ActionPerformed

    public boolean ValidateFields()
    {
        return true;
    }
    public boolean SilverValidateFelids()
    {
        return true;
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closebtn;
    private javax.swing.JButton closebtn1;
    private javax.swing.JCheckBox gallchk;
    private javax.swing.JButton gc8;
    private javax.swing.JButton gc9;
    private javax.swing.JCheckBox gcidchk;
    private javax.swing.JCheckBox gcidplcchk;
    private javax.swing.JComboBox gcustcmb;
    private javax.swing.JComboBox gcustcmb1;
    private javax.swing.JCheckBox gdatechk;
    private javax.swing.JDesktopPane gdesk;
    private com.toedter.calendar.JDateChooser gfd;
    private javax.swing.JCheckBox gplacechk;
    private javax.swing.JComboBox gpls;
    private com.toedter.calendar.JDateChooser gtd;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    private javax.swing.JCheckBox tchk1;
    private javax.swing.JCheckBox tchk2;
    private javax.swing.JDesktopPane transpan;
    private com.toedter.calendar.JDateChooser trd1;
    private com.toedter.calendar.JDateChooser trd2;
    private javax.swing.ButtonGroup trsgp;
    // End of variables declaration//GEN-END:variables

     //fun for creating shadow Starts**************************************************************
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        int width = getWidth();
        int height = getHeight();
        int shadowGap = this.shadowGap;
        Color shadowColorA = new Color(shadowColor.getRed(),
	shadowColor.getGreen(), shadowColor.getBlue(), shadowAlpha);
        Graphics2D graphics = (Graphics2D) g;

        //Sets antialiasing if HQ.
        if (highQuality) {
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
			RenderingHints.VALUE_ANTIALIAS_ON);
        }

        //Draws shadow borders if any.
        if (shady) {
            graphics.setColor(shadowColorA);
            graphics.fillRoundRect(
                    shadowOffset,// X position
                    shadowOffset,// Y position
                    width - strokeSize - shadowOffset, // width
                    height - strokeSize - shadowOffset, // height
                    arcs.width, arcs.height);// arc Dimension
        } else {
            shadowGap = 1;
        }

        //Draws the rounded opaque panel with borders.
        graphics.setColor(getBackground());
        graphics.fillRoundRect(0, 0, width - shadowGap, height - shadowGap, arcs.width, arcs.height);
        graphics.setColor(getForeground());
        graphics.setStroke(new BasicStroke(strokeSize));
        graphics.drawRoundRect(0, 0, width - shadowGap,
		height - shadowGap, arcs.width, arcs.height);

        //Sets strokes to default, is better.
        graphics.setStroke(new BasicStroke());
    }
    //fun for creating shadow Stops**************************************************************
}
